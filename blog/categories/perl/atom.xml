<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[поток: Perl | YA IT's blog]]></title>
  <link href="http://nordicdyno.github.com/blog/categories/perl/atom.xml" rel="self"/>
  <link href="http://nordicdyno.github.com/"/>
  <updated>2012-07-06T17:25:00+04:00</updated>
  <id>http://nordicdyno.github.com/</id>
  <author>
    <name><![CDATA[nordicdyno@gmail.com]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[todostat]]></title>
    <link href="http://nordicdyno.github.com/blog/2012/07/06/todostat/"/>
    <updated>2012-07-06T16:49:00+04:00</updated>
    <id>http://nordicdyno.github.com/blog/2012/07/06/todostat</id>
    
    
    <content type="html"><![CDATA[
    <p>Залил на github утилиту, которая помогает не забыть про <code>TODO</code>, <code>FIXME</code>, <code>REMOVE</code> и т.п. заметки в коде (настраиваемо). Вообще, можно (и нужно) написать тест, который будет напоминать о том же, но так нагляднее, да и одно другому не мешает.</p>

<p>Родилась она под впечатлением от этого поста: <a href="http://wynnnetherland.com/journal/contextual-todo-list-counts-in-your-zsh-prompt">Contextual TODO list counts in your zsh prompt</a></p>

<p><em><em> </em>да, в некоторых IDE можно встретить похожий функционал, но я предпочитаю им связку vim + shell, как более легковесную и настраиваемую.</em></p>

<p>Выглядит оно так:
<img src="/images/my/todolist.png" title="'todolist util screenshot'" ></p>

<p>Здесь результаты скана для собственной codebase (хранятся в кэш-файле, который обновляется "ручками").</p>

<p>Для zsh (<code>oh-my-zsh</code>) я настроил, чтобы еще справа в коммандлайне показывался нужные мне счетчики с заданной подсветкой.</p>

<p>Основные достоинства утилиты, гибкость настройки через конфигурационый файл, что и как сканировать (и что не сканировать), какими цветами подсвечивать найденные строки, вывод статистики, группировка результатов, кэширование результатов поиска. Впрочем, на кэширование можно смотреть как и на недостаток, т.к. чтобы обновить данные, сейчас необходимо вручную запускать <code>todostat -s</code>.</p>

<p>Оно еще довольно сырое, но поэтому и пиарю, если кто-то решит попробует и пришлет мне багрепорт, фичареквест – я буду очень рад. Если патч, то вообще unbelievable! )</p>

<p>P.S.</p>

<p>унутре у ней <s>неонка</s> Perl</p>

<p>P.P.S</p>

<p>  Исходники и документация: <a href="https://github.com/nordicdyno/todostat">https://github.com/nordicdyno/todostat</a></p>

    ]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[microperl]]></title>
    <link href="http://nordicdyno.github.com/blog/2012/07/04/miniperl/"/>
    <updated>2012-07-04T21:00:00+04:00</updated>
    <id>http://nordicdyno.github.com/blog/2012/07/04/miniperl</id>
    
    
    <content type="html"><![CDATA[
    <p>В составе исходников Perl (пользователи  perlbrew легко могут их найти в <em>~/perl5/perlbrew/build</em>) есть урезаннная версия интерпретатора, которая называется microperl.</p>

<p>Собирается и запускается так:</p>

<pre><code>make -f Makefile.micro
./microperl t/base/cond.t
</code></pre>

<p>или так:</p>

<pre><code>make -f Makefile.micro OPTIMIZE="-O3 -static"
</code></pre>

<p>Сборка без -O3 на Macbook Pro занимает меньше 10 секунд. Это быстрее, чем длится стандартный sh Configure -de перед сборкой (18,52s user 11,68s system 91% cpu 33,089 total).  Размер бинарника  получается между 1.5 и 2 mb.</p>

<p>Может пригодится для написания скриптов в "голом" окружении, когда на *sh писать не хочется, а /usr/bin/perl по какой-то причине не доступен и собрать свой нельзя или долго.</p>

<p>Дополнительные материалы:</p>

<ul>
<li><a href="http://www.perlmonks.org/?node_id=228040">bootstrapping with microperl</a></li>
<li><a href="http://www.foo.be/docs/tpj/issues/vol5_3/tpj0503-0003.html">http://www.foo.be/docs/tpj/issues/vol5_3/tpj0503-0003.html</a></li>
<li>README.micro в составе дистрибутива</li>
</ul>


    ]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unicode. Ликбез]]></title>
    <link href="http://nordicdyno.github.com/blog/2012/02/17/unicode-basics/"/>
    <updated>2012-02-17T18:30:00+04:00</updated>
    <id>http://nordicdyno.github.com/blog/2012/02/17/unicode-basics</id>
    
    
    <content type="html"><![CDATA[
    <p>Текст выросший из моего доклада <a href="http://event.perlrussia.org/saintperl3/talk/158">Unicode-ликбез</a> на Санкт-Петербугском воркшопе <a href="http://event.perlrussia.org/saintperl3/index.html">SaintPerl 2011</a>.</p>

    <br><a rel="full-article" href="/blog/2012/02/17/unicode-basics/">➲&nbsp;запись целиком</a>
    ]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Обычная vs хвостовая рекурсия в Perl]]></title>
    <link href="http://nordicdyno.github.com/blog/2012/02/15/tail-recursion/"/>
    <updated>2012-02-15T18:52:00+04:00</updated>
    <id>http://nordicdyno.github.com/blog/2012/02/15/tail-recursion</id>
    
    
    <content type="html"><![CDATA[
    <p>Написал сравнительный тест для обычной рекурсии и хвостовой,
по мотивам  <a href="http://vimeo.com/35694483">"Functional Javascript"</a> (vimeo link)</p>

<p>Результаты на MacBook Pro 15 2011, Perl 5.14.2</p>

<p>вычисление суммы чисел ряда (первая цифра – количество итераций):</p>

<pre><code>tail sum(10000)   (0 sec, 0 kb)
rec  sum(10000)   (0 sec, 5496 kb)
tail sum(100000)  (0 sec, 0 kb)
rec  sum(100000)  (0 sec, 45628 kb)
tail sum(1000000) (1 sec, 0 kb)
rec  sum(1000000) (1 sec, 476164 kb)
</code></pre>

<p>вычисление факториала (использовал bignum):</p>

<pre><code>tail 10000!  (5 sec, 636 kb)
rec  10000!  (9 sec, 9612 kb)
tail 25000!  (31 sec, 228 kb)
rec  25000!  (63 sec, 15016 kb)
</code></pre>

<p>в 5.10-м профит чуть больше.</p>

<p>Боже, храни goto! )</p>

    <br><a rel="full-article" href="/blog/2012/02/15/tail-recursion/">➲&nbsp;запись целиком</a>
    ]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Diligent Perl]]></title>
    <link href="http://nordicdyno.github.com/blog/2011/12/29/diligent-perl/"/>
    <updated>2011-12-29T14:25:00+04:00</updated>
    <id>http://nordicdyno.github.com/blog/2011/12/29/diligent-perl</id>
    
    
    <content type="html"><![CDATA[
    <p><div class='embed tweet'><blockquote class="twitter-tweet" lang="ru"><p>Hah. <a href="https://twitter.com/search/%2523Perl">#Perl</a> not vulnerable to <a href="https://twitter.com/search/%2523hashDoS">#hashDoS</a> because we fixed it the first time around, eight years ago. Other languages not so diligent.</p>&mdash; Simon Cozens (@simoncozens) <a href="https://twitter.com/simoncozens/status/152314409652457472" data-datetime="2011-12-29T09:05:59+00:00">декабря 29, 2011</a></blockquote>
<script src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div></p>

    ]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl guts]]></title>
    <link href="http://nordicdyno.github.com/blog/2011/12/23/perl-guts/"/>
    <updated>2011-12-23T18:41:00+04:00</updated>
    <id>http://nordicdyno.github.com/blog/2011/12/23/perl-guts</id>
    
    
    <content type="html"><![CDATA[
    <p>Я понемногу погружаюсь в кишочки Perl: XS, Perl API, Sv* в деталях. Кроме всего прочего, сейчас читаю Extending And Embeding Perl. Книжка эпохи 5.6, но считаю, что полезная. Решил выписать то, что узнал нового для себя, или вспомнил чего-то из старого.</p>

    <br><a rel="full-article" href="/blog/2011/12/23/perl-guts/">➲&nbsp;запись целиком</a>
    ]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[По следам YAPC::ASIA 2011]]></title>
    <link href="http://nordicdyno.github.com/blog/2011/10/22/po-sliedam-yapc-asia-2011/"/>
    <updated>2011-10-22T13:26:00+04:00</updated>
    <id>http://nordicdyno.github.com/blog/2011/10/22/po-sliedam-yapc-asia-2011</id>
    
    
    <content type="html"><![CDATA[
    <p>Не так давно в Токио прошла самая большая Perl-конференция этого года.
Так как я потратил определенное время на изучение ее материалов, то решил поделиться информацией.</p>

    <br><a rel="full-article" href="/blog/2011/10/22/po-sliedam-yapc-asia-2011/">➲&nbsp;запись целиком</a>
    ]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Обзор YAPC::Europe 2011]]></title>
    <link href="http://nordicdyno.github.com/blog/2011/08/23/yapc-europe-2011-review/"/>
    <updated>2011-08-23T17:31:00+04:00</updated>
    <id>http://nordicdyno.github.com/blog/2011/08/23/yapc-europe-2011-review</id>
    
    
    <content type="html"><![CDATA[
    <p>На прошлой неделе я посетил Perl-конференцию <a href="http://yapceurope.lv/ye2011/">YAPC::Europe 2011 “Modern Perl”</a>, которая проходила в Риге.
Помимо того, что мне удалось сфотографироваться с Ларри Уоллом и получить от него и Дэмиана Конвея автографы, потусить с гиками со всего мира и разжиться сувенирными футболками, я исправно посещал презентации в течении тех трех дней, что шла конференция, и даже немножечко пытался конспектировать то что слышал. )
Ниже список тех выступлений, на которых удалось побывать, с моими кратким комментариями.</p>

    <br><a rel="full-article" href="/blog/2011/08/23/yapc-europe-2011-review/">➲&nbsp;запись целиком</a>
    ]]></content>
  </entry>
  
</feed>
